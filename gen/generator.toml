[general]
library_name = "Aeron"
output_file_path = "./LibAeron.jl"
module_name = "LibAeron"
# jll_pkg_name = "Aeron_jll"
export_symbol_prefixes = ["aeron_"]
prologue_file_path = "./prologue.jl"



# use_julia_native_enum_type = true

# We want to be able to create unintialized context structs and let the library fill them in
auto_mutability = true
auto_mutability_with_new = true
auto_mutability_includelist  = [
    "aeron_context_stct",
]

extract_c_comment_style = "doxygen"
show_c_function_prototype = true

# # use deterministic symbol instead of `gensym`-generated `var"##XXX"`
# use_deterministic_symbol = true
# smart_de_anonymize = true


[codegen]
use_ccall_macro = true
always_NUL_terminated_string = true


[codegen.macro]
# itâ€˜s highly recommended to set this entry to "basic".
# if you'd like to skip all of the macros, please set this entry to "disable".
# if you'd like to translate function-like macros to Julia, please set this entry to "aggressive".
macro_mode = "disable"

functionlike_macro_includelist = [
    # "AERON_COUNTER_REGISTRATION_ID_OFFSET",
    # "AERON_COUNTER_TYPE_ID_OFFSET",
    # "AERON_COUNTER_FREE_FOR_REUSE_DEADLINE_OFFSET",
    # "AERON_COUNTER_KEY_OFFSET",
    # "AERON_COUNTER_LABEL_LENGTH_OFFSET",
]
